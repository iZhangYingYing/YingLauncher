<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:MicroTools">


    <Style TargetType="{x:Type local:ImageButton}">
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImageButton}">
                    <Grid x:Name="ImageButtonGrid">
                        <Border 
                            
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            Visibility="{Binding BorderVisibility, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <StackPanel 
                            Orientation="Vertical" VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                            <Image x:Name="ButtonImage"
                                   Source="{Binding NormalImagePath,RelativeSource={RelativeSource TemplatedParent}}"
                                   Height="{Binding ImageSize, RelativeSource={RelativeSource TemplatedParent}}" 
                                   Width="{Binding ImageSize, RelativeSource={RelativeSource TemplatedParent}}"
                                   ToolTip="{TemplateBinding ToolTip}"/>
                            <ContentPresenter HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" 
                                    VerticalAlignment="Center" RecognizesAccessKey="True" />
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="ButtonImage" Property="Source" Value="{Binding HoverImagePath, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="ButtonImage" Property="Source" Value="{Binding PressImagePath, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ButtonImage" Property="Source" Value="{Binding DisableImagePath, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>






    <Style TargetType="{x:Type local:TabItemButtonOne}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TabItemButtonOne}" >
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard1">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="bd">
                                <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#F1F5F8"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <BulletDecorator x:Name="TabItemButtonOne_bullet" Background="Transparent">
                        <Border x:Name="bd"   Background="White"   Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20" />
                                    <ColumnDefinition Width="30" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>
                                <Rectangle  Grid.Column="1"
                                    Height="{Binding ImageSize, RelativeSource={RelativeSource TemplatedParent}}" 
                                    Width="{Binding ImageSize, RelativeSource={RelativeSource TemplatedParent}}"
                                    VerticalAlignment="Center" HorizontalAlignment="Center"
                                    ToolTip="{TemplateBinding ToolTip}">
                                    <Rectangle.Fill>
                                        <ImageBrush ImageSource="{Binding ImagePath,RelativeSource={RelativeSource TemplatedParent}}" Stretch="Uniform" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <ContentPresenter Grid.Column="2"  HorizontalAlignment="Center"  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="Center"/>
                            </Grid>
                            <Border.OpacityMask>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Black" Offset="0"/>
                                    <GradientStop Color="White" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.OpacityMask>

                        </Border>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="bd" Property="Background" Value="gray" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="bd" Property="Background" Value="{x:Null}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="bd" Property="Background" Value="#FF31C27C" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="bd" Property="Background" Value="Red" />
                        </MultiTrigger>


                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





    <Style TargetType="{x:Type local:ToggleImageButton}">
        <Setter Property="Height" Value="18" />
        <Setter Property="Width" Value="18" />
        <Setter Property="Background" Value="Red" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ToggleImageButton}">
                    <Border BorderBrush="Black" BorderThickness="2">
                        <Image  Name="image"
                        Height="18"
                        Width="18"
                        Source="{Binding CheckNormalImagePath,RelativeSource={RelativeSource TemplatedParent}}" 
                        Stretch="Uniform" />
                    </Border>

                    
 
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="image" Property="Source" Value="{Binding CheckNormalImagePath, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="image" Property="Source" Value="{Binding UnCheckNormalImagePath, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    
    

    <Style TargetType="{x:Type local:ImageButtonTwo}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImageButtonTwo}">

                    <Grid Background="{TemplateBinding Background}"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}">
                        <Image Name="ButtonTwoImage"
                                   Source="{Binding NormalImagePath,RelativeSource={RelativeSource TemplatedParent}}"
                                   Stretch="Uniform" SnapsToDevicePixels="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="ButtonTwoImage" Property="Source" Value="{Binding HoverImagePath, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="ButtonTwoImage" Property="Source" Value="{Binding PressImagePath, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
                
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
